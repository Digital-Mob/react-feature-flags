import e from"react";const t="feature:flags",a=3e5,n=e.createContext(new Map);const r=()=>{const t=e.useContext(n);return e.useMemo(()=>[new Map(t)],[t])},o=({children:r,url:o,refreshInterval:s=a})=>{const[c,l]=e.useState({featureFlags:new Map}),u=e.useCallback(()=>{(function(e){return window.fetch(e).then(e=>e.json()).then(e=>{return(e&&e.featureFlags||[]).reduce((e,t)=>(t.enabled&&e.set(t.name,t),e),new Map)})})(o).then(e=>{l(t=>({...t,featureFlags:e})),function(e){if(e&&e.size>0){const a=JSON.stringify({flags:Array.from(e.entries()),createdAt:Date.now()});window.localStorage.setItem(t,a)}else window.localStorage.removeItem(t)}(e)})},[o]);return e.useEffect(()=>{const e=function(){const e=window.localStorage.getItem(t);if(e)try{const t=JSON.parse(e);if((t.createdAt||0)+a>=Date.now())return new Map(t.flags)}catch(e){}}();e?l(t=>({...t,featureFlags:e})):u();const n=setInterval(()=>{u()},s);return()=>{clearInterval(n)}},[]),e.createElement(n.Provider,{value:c.featureFlags},r)},s=({children:e,flags:t,exact:a=!0,fallback:n})=>{const[o]=r(),s=[].concat(t||[]);return(a?s.every(e=>o.has(e)):s.some(e=>o.has(e)))?e:n&&n()||null};export{o as FeatureFlagsProvider,s as FeatureFlagsWidget,r as useFeatureFlags};
