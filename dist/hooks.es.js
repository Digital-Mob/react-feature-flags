import e from"react";const t=e.createContext(new Map),a=({children:a,url:r,refreshInterval:n=3e5})=>{const[s,l]=e.useState({featureFlags:new Map}),o=e.useCallback(()=>{(e=>window.fetch(e).then(e=>e.json()).then(e=>{return(e&&e.featureFlags||[]).reduce((e,t)=>(t.enabled&&e.set(t.name,t),e),new Map)}))(r).then(e=>{l(t=>({...t,featureFlags:e})),(e=>{if(e&&e.size>0){const t=JSON.stringify(Array.from(e.entries()));window.localStorage.setItem("feature:flags",t)}else window.localStorage.removeItem("feature:flags")})(e)})},[r]);return e.useEffect(()=>{const e=(()=>{const e=window.localStorage.getItem("feature:flags");if(e)try{return new Map(JSON.parse(e))}catch(e){}})();e&&l(t=>({...t,featureFlags:e})),o();const t=setInterval(()=>{o()},n);return()=>{clearInterval(t)}},[]),e.createElement(t.Provider,{value:s.featureFlags},a)},r=()=>{const a=e.useContext(t);return e.useMemo(()=>[new Map(a)],[a])},n=({children:e,flags:t,exact:a=!0,fallback:n})=>{const[s]=r(),l=[].concat(t||[]);return(a?l.every(e=>s.has(e)):l.some(e=>s.has(e)))?e:n&&n()||null};export{a as FeatureFlagsProvider,n as FeatureFlagsWidget,r as useFeatureFlags};
