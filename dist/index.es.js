import e from"react";const t=3e5,r=()=>{const e=window.localStorage.getItem("feature:flags");if(e)try{return new Map(JSON.parse(e))}catch(e){}},a=e=>{if(e&&e.size>0){const t=JSON.stringify(Array.from(e.entries()));window.localStorage.setItem("feature:flags",t)}else window.localStorage.removeItem("feature:flags")},s=e=>window.fetch(e).then(e=>e.json()).then(e=>{return(e&&e.featureFlags||[]).reduce((e,t)=>(t.enabled&&e.set(t.name,t),e),new Map)}),n=e.createContext(new Map);class l extends e.PureComponent{constructor(){super(...arguments),this.state={featureFlags:new Map},this.intervalID=null}componentDidMount(){const{refreshInterval:e=t}=this.props,a=r();a&&this.setState(e=>({...e,featureFlags:a})),this.getFeaturesFlags(),this.intervalID=setInterval(()=>{this.getFeaturesFlags()},e)}componentWillUnmount(){this.intervalID&&(clearInterval(this.intervalID),this.intervalID=null)}render(){const{children:t}=this.props,{featureFlags:r}=this.state;return e.createElement(n.Provider,{value:r},t)}getFeaturesFlags(){const{url:e}=this.props;s(e).then(e=>{this.setState(t=>({...t,featureFlags:e})),a(e)})}}const o=({children:t,flags:r,exact:a=!0,fallback:s})=>{const l=[].concat(r||[]);return e.createElement(n.Consumer,null,e=>{return(a?l.every(t=>e.has(t)):l.some(t=>e.has(t)))?t:s&&s()||null})};export{n as FeatureFlagsContext,l as FeatureFlagsProvider,o as FeatureFlagsWidget};
